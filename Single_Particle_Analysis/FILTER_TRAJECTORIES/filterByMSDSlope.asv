function subtracks = filterByMSDSlope(tracks,maxT, minSlope, maxSlope,movieInfo,sgolay)
% Go through all input tracks, estimate speed by fittinglinear functon to cumulative displacement vs time, 
% then return only those with speed>minSpeed and speed < maxSpeed

% Inputs:

% tracks = a list of particle tracks which is assumed to be in the format 
% output by the function uTrackToSimpleTraj:
%
%   'first' =   the first movie frame in which this track appears
%   'last' =    the last movie frame in which this track appears.
%   'lifetime' = the length of the track in frames.
%   'x' = an array containing the sequence of x positions.
%   'y' = an array containing the sequence of y positions.
%   'I' = an array containing the intensity values.

% minSlope  Return all tracks with slope greater than minSlope

% maxSpeed  Return all tracks with slope less than maxSlope

% sgolay = width of the goley window to smooth the x and y
% data


% movieInfo         =   a struct containing the following fields:
%     
%     frameRate:      in #/sec
%     pixelSize:      in Âµm
% 
% Output:

% subtracks          The sublist of tracks.

    numTracks = size(trks,2)
    X = 1:maxTrackSize;
    frameInterval = 1/movieInfo.frameRate;
    X=X*frameInterval;    
    
    slopes = zeros(numTracks,1);

    for i=1:numTracks  
        msd = getMSDvsTAU(trks(i),maxT+1,movieInfo); 
        slopes(i) = (log(msd(maxT))-log(msd(minT)))/(log(X(maxT)) - log(X(minT)));
    end
    
    for i=1:numTracks
        speed(i) = getSpeed(tracks(i),movieInfo,sgolay);
    end
    subtracks = tracks((speed<maxSpeed)&(speed>minSpeed));

end

